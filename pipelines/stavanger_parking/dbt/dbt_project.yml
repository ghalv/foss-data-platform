name: 'stavanger_parking'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'stavanger_parking'

# These configurations specify where dbt should look for different types of files.
model-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:
  - "target"
  - "dbt_packages"

# Ensure required schemas exist (Iceberg)
on-run-start:
  - "CREATE SCHEMA IF NOT EXISTS iceberg.analytics"
  - "CREATE SCHEMA IF NOT EXISTS iceberg.analytics_staging"
  - "CREATE SCHEMA IF NOT EXISTS iceberg.analytics_intermediate"
  - "CREATE SCHEMA IF NOT EXISTS iceberg.analytics_marts_core"
  - "CREATE SCHEMA IF NOT EXISTS iceberg.analytics_marts_marketing"

# Delta load specific configurations
vars:
  pipeline_run_id: "{{ run_started_at.strftime('%Y%m%d_%H%M%S') }}"
  load_type: "delta_load"
  data_source: "stavanger_api"

# Configuring data models
models:
  stavanger_parking:
    # Config indicated by + and applies to all files under models/example/
    staging:
      +materialized: incremental
      +incremental_strategy: merge
      +schema: analytics_staging
      +tags: ['staging', 'delta_load']
    intermediate:
      +materialized: table
      +schema: analytics_intermediate
    marts:
      +materialized: table
      +schema: analytics
    core:
      +materialized: table
      +schema: analytics
    marketing:
      +materialized: table
      +schema: analytics

    # Delta load specific models
    delta_load:
      +materialized: incremental
      +incremental_strategy: merge
      +schema: analytics_staging
      +tags: ['delta_load', 'iceberg', 'incremental']

    # Metadata models
    metadata:
      +materialized: incremental
      +incremental_strategy: append
      +schema: analytics
      +tags: ['metadata', 'audit']

# Seeds configuration
seeds:
  stavanger_parking:
    +schema: analytics
    +column_types:
      name: varchar(255)
      available_spaces: integer
      lat: varchar(64)
      lon: varchar(64)
      fetched_at: varchar(64)  # Store as varchar first, then cast to timestamp

# Documentation
docs-paths: ["docs"]
